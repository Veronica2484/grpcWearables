// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service3.proto

package service3;

public final class SnoreMeterServiceImpl {
  private SnoreMeterServiceImpl() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_service3_SnoreMeterRequest_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_service3_SnoreMeterRequest_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_service3_SnoreMeterResponse_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_service3_SnoreMeterResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016service3.proto\022\010service3\"#\n\021SnoreMeter" +
      "Request\022\016\n\006number\030\001 \001(\005\"(\n\022SnoreMeterRes" +
      "ponse\022\022\n\nsnoreAlert\030\001 \001(\t2b\n\021SnoreMeterS" +
      "ervice\022M\n\nSnoreMeter\022\033.service3.SnoreMet" +
      "erRequest\032\034.service3.SnoreMeterResponse\"" +
      "\000(\0010\001B#\n\010service3B\025SnoreMeterServiceImpl" +
      "P\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_service3_SnoreMeterRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_service3_SnoreMeterRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_service3_SnoreMeterRequest_descriptor,
        new java.lang.String[] { "Number", });
    internal_static_service3_SnoreMeterResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_service3_SnoreMeterResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_service3_SnoreMeterResponse_descriptor,
        new java.lang.String[] { "SnoreAlert", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
